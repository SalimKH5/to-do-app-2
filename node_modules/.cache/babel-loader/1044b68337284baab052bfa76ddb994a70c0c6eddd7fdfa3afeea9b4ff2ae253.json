{"ast":null,"code":"var _jsxFileName = \"/home/khadir/development /WEBDEV/react-dev/to-do-list/src/Component/to-do/TodoList.jsx\";\nimport React from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport CreateIcon from '@mui/icons-material/Create';\nimport \"./todo.css\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { color } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoList(_ref) {\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  const handldelete = _ref2 => {\n    let {\n      id\n    } = _ref2;\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n          sx: {\n            color: \"blue\",\n            border: \"1px solid blue\",\n            borderRadius: \"50%\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => handldelete(todo),\n          sx: {\n            color: \"red\",\n            border: \"1px solid red\",\n            borderRadius: \"50%\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CreateIcon, {\n          sx: {\n            color: \"black\",\n            border: \"1px solid black\",\n            borderRadius: \"50%\",\n            cursor: \"pointer\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","CloseIcon","CreateIcon","CheckIcon","color","TodoList","todos","setTodos","handldelete","id","filter","todo","map","title","border","borderRadius","cursor"],"sources":["/home/khadir/development /WEBDEV/react-dev/to-do-list/src/Component/to-do/TodoList.jsx"],"sourcesContent":["import React from 'react'\nimport CloseIcon from '@mui/icons-material/Close';\nimport CreateIcon from '@mui/icons-material/Create';\nimport \"./todo.css\"\nimport CheckIcon from '@mui/icons-material/Check';\nimport { color } from '@mui/system';\nfunction TodoList({todos,setTodos}) {\n\n  const handldelete=({id})=>{\n    setTodos(todos.filter((todo)=> todo.id!==id ))\n  }\n\n  return (\n    <>\n    {\n      todos.map((todo) => (\n        <div className='todo' key={todo.id}>\n          <p>{todo.title}</p>\n          <div className='menu'>\n              <CheckIcon                      sx={{\n                                                             color:\"blue\",\n                                                             border:\"1px solid blue\",\n                                                             borderRadius:\"50%\",\n                                                             cursor:\"pointer\"\n                                                            }}/>\n              <CloseIcon  onClick={()=>handldelete(todo)} sx={{\n                                                             color:\"red\",\n                                                             border:\"1px solid red\",\n                                                             borderRadius:\"50%\",\n                                                             cursor:\"pointer\"\n                                                            }}/>\n              <CreateIcon                                    sx={{\n                                                             color:\"black\",\n                                                             border:\"1px solid black\",\n                                                             borderRadius:\"50%\",\n                                                             cursor:\"pointer\"\n                                                            }}  />\n          </div>\n        </div>\n      ))\n  }\n  </>\n  );\n}\n\nexport default TodoList"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAO,YAAY;AACnB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,KAAK,QAAQ,aAAa;AAAC;AAAA;AACpC,SAASC,QAAQ,OAAmB;EAAA,IAAlB;IAACC,KAAK;IAACC;EAAQ,CAAC;EAEhC,MAAMC,WAAW,GAAC,SAAQ;IAAA,IAAP;MAACC;IAAE,CAAC;IACrBF,QAAQ,CAACD,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAGA,EAAE,CAAE,CAAC;EAChD,CAAC;EAED,oBACE;IAAA,UAEEH,KAAK,CAACM,GAAG,CAAED,IAAI,iBACb;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAA,UAAIA,IAAI,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,eACnB;QAAK,SAAS,EAAC,MAAM;QAAA,wBACjB,QAAC,SAAS;UAAsB,EAAE,EAAE;YACWT,KAAK,EAAC,MAAM;YACZU,MAAM,EAAC,gBAAgB;YACvBC,YAAY,EAAC,KAAK;YAClBC,MAAM,EAAC;UACR;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAClD,QAAC,SAAS;UAAE,OAAO,EAAE,MAAIR,WAAW,CAACG,IAAI,CAAE;UAAC,EAAE,EAAE;YACDP,KAAK,EAAC,KAAK;YACXU,MAAM,EAAC,eAAe;YACtBC,YAAY,EAAC,KAAK;YAClBC,MAAM,EAAC;UACR;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eAClD,QAAC,UAAU;UAAoC,EAAE,EAAE;YACJZ,KAAK,EAAC,OAAO;YACbU,MAAM,EAAC,iBAAiB;YACxBC,YAAY,EAAC,KAAK;YAClBC,MAAM,EAAC;UACR;QAAE;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAClD;IAAA,GArBmBL,IAAI,CAACF,EAAE;MAAA;MAAA;MAAA;IAAA,QAuBnC;EAAC,iBAEH;AAEL;AAAC,KArCQJ,QAAQ;AAuCjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}